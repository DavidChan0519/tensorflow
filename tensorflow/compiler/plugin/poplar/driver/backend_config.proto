syntax = "proto3";

import "tensorflow/compiler/xla/xla_data.proto";

package xla.poplarplugin;

// Enums to use as string keys in the FrontendAttributes map from
// tensorflow/compiler/xla/xla_data.proto for the Poplar specific
// attributes.
enum FrontendAttributeId {
    // Scope override for stochastic rounding
    // (See tensorflow/python/ipu/scopes.py)
    STOCHASTIC_ROUNDING = 0;
    // Custom call's type (Used in pipelining).
    CALL_CONFIG_TYPE = 1;
};

// An enum representing the "Machine Learning" type of the instruction.
enum MLType {
  NONE = 0;
  INFERENCE_FWD = 1;
  TRAINING_FWD = 2;
  TRAINING_BWD = 3;
  TRAINING_WU = 4;
};

// Backend specific HloInstruction config
// NEXT ID = 7
message PoplarBackendConfig {

  // Instruction config for a fusion instruction
  message FusionConfig {
    // Convolutions
    Window window = 1;
    ConvolutionDimensionNumbers dimension_numbers = 2;
    int64 feature_group_count = 3;
    int64 batch_group_count = 4;

    // Fusion inplace operands.
    repeated int64 inplace_operands = 5;
  };

  // Instruction config for a Call instruction
  message CallConfig {
    enum Type {
      // Call by default.
      Call = 0;
      RepeatLoop = 1;
      PipelineStage = 2;
      Pipeline = 3;
    };

    message RepeatConfig {
      int64 repeat_count = 1;
    }

    message PipelineStageConfig {
    }

    message PipelineConfig {
    }

    message CallConfig {
    }

    Type type = 1;

    oneof Config {
      CallConfig call_config = 2;
      RepeatConfig repeat_config = 3;
      PipelineStageConfig pipeline_stage_config = 4;
      PipelineConfig pipeline_config = 5;
    }
  }

  oneof Config {
    FusionConfig fusion_config = 1;
    CallConfig call_config = 2;
  }

  bool is_inplace = 3;

  int64 hash_of_custom_attributes = 4;
  enum StochasticRounding {
    NOT_SET = 0;
    FORCE_ON = 1;
    FORCE_OFF = 2;
  }

  StochasticRounding stochastic_rounding = 5;

  MLType ml_type = 6;
};
